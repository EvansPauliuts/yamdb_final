###########
# BUILDER #
###########

FROM python:3.9.6-alpine as builder

WORKDIR /code/app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev
RUN apk add --no-cache jpeg-dev zlib-dev
RUN apk add --no-cache --virtual .build-deps build-base linux-headers \
    && pip install Pillow

RUN pip install --upgrade pip
RUN pip install flake8==3.9.2
COPY . .
# RUN #flake8 --ignore=E501,F401 .

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /code/app/wheels -r requirements.txt

#########
# FINAL #
#########

FROM python:3.9.6-alpine

RUN mkdir -p /home/app

RUN addgroup -S app && adduser -S app -G app

ENV HOME=/home/app
ENV APP_HOME=/home/app/dev
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

RUN apk update && apk add libpq
COPY --from=builder /code/app/wheels /wheels
COPY --from=builder /code/app/requirements.txt .
RUN pip install --no-cache /wheels/*

COPY ./entrypoint/prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/prod.sh
RUN chmod +x $APP_HOME/prod.sh

COPY . $APP_HOME

RUN chown -R app:app $APP_HOME

USER app

ENTRYPOINT ["sh", "/home/app/dev/prod.sh"]
